# https://github.com/vegasbrianc/prometheus/blob/master/docker-compose.yml
version: "3.9"

networks:
  monitoring-network: {}

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  # Our main application, the API built with F#.
  api-server:
    build: .
    environment:
      - HOST=0.0.0.0
      - PORT=8085
    ports:
      - "8085:8085"
    networks:
      - monitoring-network

  # The main tool used to collect and store metrics data.
  # It uses the pull model.
  prometheus:
    image: prom/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.config.file=/etc/prometheus/web.yml"
    networks:
      - monitoring-network
    depends_on:
      - cadvisor
    volumes:
      - ./Prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    links:
      - alertmanager:alertmanager
    ports:
      - "9090:9090"
    # restart: always

  # AlertManager works great to send automated alerts when something goes down.
  # Make sure to propagate only useful alerts in a small quantity.
  # alertmanager:
  #   image: prom/alertmanager
  #   command:
  #     - "--config.file=/etc/alertmanager/config.yml"
  #     - "--storage.path=/alertmanager"
  #   ports:
  #     - 9093:9093
  #   volumes:
  #     - ./AlertManager/:/etc/alertmanager/
  #   networks:
  #     - monitoring-network
  #   # restart: always

  # cAdvisor (Container Advisor) provides container users an understanding of the 
  # resource usage and performance characteristics of their running containers. It 
  # is a running daemon that collects, aggregates, processes, and exports information 
  # about running containers. Specifically, for each container it keeps resource 
  # isolation parameters, historical resource usage, histograms of complete historical 
  # resource usage and network statistics. This data is exported by container and 
  # machine-wide.
  # reference: https://github.com/google/cadvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - monitoring-network
    # restart: always
    # deploy:
    #   mode: global

  # Grafana is the tool we use to create cool and instructive charts and graphs to
  # present the scraped data. It's critical to pick the right visualization category
  # in order to facilitate the process of identifying problems and their cause.
  grafana:
    image: grafana/grafana-enterprise
    user: "472"
    depends_on:
      - prometheus
    networks:
      - monitoring-network
    volumes:
      - grafana_data:/var/lib/grafana
      - ./Grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./Grafana/config.monitoring
    ports:
      - "3000:3000"
    # restart: always

  # https://github.com/grafana/loki/blob/main/production/docker-compose.yaml
  # loki:
  #   image: grafana/loki:2.5.0
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml
  #   networks:
  #     - monitoring-network

  # promtail:
  #   image: grafana/promtail:2.5.0
  #   volumes:
  #     - /var/log:/var/log
  #   command: -config.file=/etc/promtail/config.yml
  #   networks:
  #     - monitoring-network